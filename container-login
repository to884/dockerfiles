#!/usr/bin/bash -eu

#-----------------------------------------------------------------------------
function usage () {
    echo "Usage: [OPTION] $(basename $0) TAG ..."
}

#-----------------------------------------------------------------------------
# Docker イメージからコンテナを作成しログインする
# $1 : タグ名 = DockerHub アカウント名(省略可）/ Dockerfile のあるディレクトリ
# 例 : xxx/brew-base or brew-base
# $2～ イメージ個別の引数
#-----------------------------------------------------------------------------
EXEC_DIR=$(cd $(dirname $0) && pwd)

set +u
if [ -z $1 ]; then
    usage
    exit 1
fi

if [ $(echo $1 | grep -E "^\-h|^\-\-help$") != ""  ]; then
    usage
    exit 0
fi

# 引数が"アカウント/ディレクトリ"か"ディレクトリのみ"かを判定する
set +e
TAG_NAME=$(echo $1 | grep "/")
set -e
MOUNT_DIR=$2
set -u

# 引数に / が含まれていれば、'/' の前後をアカウント名とディレクトリ名に分ける
if [ -n "${TAG_NAME}" ]; then
    ACCOUNT=$(echo ${TAG_NAME} | cut -d "/" -f1)
    IMAGE_DIR=$(echo ${TAG_NAME} | cut -d "/" -f2)
else
    ACCOUNT=
    IMAGE_DIR=$1
fi

# アカウント名が指定されている場合は、DockerHub にログインする
if [ -n "${ACCOUNT}" ]; then
    docker login
    ACCOUNT="${ACCOUNT}/"
fi

# 指定したディレクトリが存在するか確認する
if [ ! -d "${EXEC_DIR}/${IMAGE_DIR}" ]; then
    echo -e "ERROR: No such directory : ${IMAGE_DIR}\n" >&2;
    usage
    echo -e "\nPlease select a directory from the following list:"
    # ディレクトリのリストを表示する
    ls -1F | grep -E "^.+\/$" | sed -E "s|(.+)/$|    \1|g"
    exit 1
fi

# 各ディレクトリの container-login にディスパッチする
${EXEC_DIR}/${IMAGE_DIR}/container-login $@