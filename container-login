#!/usr/bin/bash -eu

#-----------------------------------------------------------------------------
function usage () {
echo -e "
使い方: container-login [OPTION]... TAG
指定したイメージの新しいコンテナを実行しログインします。
例: container-login -u 'user' brew-base

\e[33;1m引数:
    \e[32mTAG
        \e[37mイメージタグを指定します。
        DockerHub のアカウント名を使用する形式（'account/tag'）
        もしくはタグ名のみの形式（'tag'）を指定することができます。

\e[33;1mオプション:
    \e[32m-u\e[37m, \e[32m--user <ユーザー名>
        \e[37m省略可。コンテナで使用するユーザー名を指定します。
        省略した場合は、現在のホスト側ユーザー名が指定されます。
\e[m
"
}

#-----------------------------------------------------------------------------
# Docker イメージからコンテナを作成しログインする
# $1 : タグ名 = DockerHub アカウント名(省略可）/ Dockerfile のあるディレクトリ
# 例 : xxx/brew-base or brew-base
# $2～ イメージ個別の引数
#-----------------------------------------------------------------------------
EXEC_DIR=$(cd $(dirname $0) && pwd)

if [ $# -eq 0 ]; then
    echo -e "\e[31merror: \e[37m少なくとも1つの引数が必要です。\e[m" >&2;
    usage
    exit 1
fi

# 引数がヘルプオプションだけであれば、ヘルプを表示して終了する
if [[ $(echo $1 | grep -E "^\-h|^\-\-help$") != ""  ]]; then
    usage
    exit 0
fi

# 引数が"アカウント/ディレクトリ"か"ディレクトリのみ"かを判定する
set +eu
TAG_NAME=$(echo $1 | grep "/")
MOUNT_DIR=$2
set -eu

# 引数に / が含まれていれば、'/' の前後をアカウント名とディレクトリ名に分ける
if [ -n "${TAG_NAME}" ]; then
    ACCOUNT=$(echo ${TAG_NAME} | cut -d "/" -f1)
    IMAGE_DIR=$(echo ${TAG_NAME} | cut -d "/" -f2)
else
    ACCOUNT=
    IMAGE_DIR=$1
fi

# アカウント名が指定されている場合は、DockerHub にログインする
if [ -n "${ACCOUNT}" ]; then
    docker login
    ACCOUNT="${ACCOUNT}/"
fi

# 指定したディレクトリが存在するか確認する
if [ ! -d "${EXEC_DIR}/${IMAGE_DIR}" ]; then
    echo -e "\e[31merror: \e[37mディレクトリが見つかりません。 ${IMAGE_DIR}\e[m" >&2;
    usage
    echo -e "\e[37m次のディレクトリを指定してください。\e[m" >&2;
    # ディレクトリのリストを表示する
    ls -1F | grep -E "^.+\/$" | sed -E "s|(.+)/$|    \1|g"
    exit 1
fi

# 各ディレクトリの container-login にディスパッチする
${EXEC_DIR}/${IMAGE_DIR}/container-login $@