#!/usr/bin/bash -eu

#-----------------------------------------------------------------------------
function usage () {
    echo "$(basename $0) <Tag> <Mount Dir>" 2>&1;
}

#-----------------------------------------------------------------------------
# Docker イメージからコンテナを作成しログインする
# $1 : タグ名 = DockerHub アカウント名(省略可）/ Dockerfile のあるディレクトリ
# 例 : xxx/brew-base or brew-base
# $2 : 作業用ディレクトリとしてマウントするホストのディレクトリパス
#-----------------------------------------------------------------------------
EXEC_DIR=$(cd $(dirname $0) && pwd)

set +u
if [ -z $1 ]; then
    usage
    exit 1
fi

# 引数が"アカウント/ディレクトリ"か"ディレクトリのみ"かを判定する
set +e
TAG_NAME=$(echo $1 | grep "/")
set -e
MOUNT_DIR=$2
set -u

# 引数に / が含まれていれば、'/' の前後をアカウント名とディレクトリ名に分ける
if [ -n "${TAG_NAME}" ]; then
    ACCOUNT=$(echo ${TAG_NAME} | cut -d "/" -f1)
    IMAGE_DIR=$(echo ${TAG_NAME} | cut -d "/" -f2)
else
    ACCOUNT=
    IMAGE_DIR=$1
    TAG_NAME=
fi

# アカウント名が指定されている場合は、DockerHub にログインする
if [ -n "${ACCOUNT}" ]; then
    docker login
    ACCOUNT="${ACCOUNT}/"
fi

# ホスト側のマウントディレクトリを指定しているかを判定する
if [ -z "${MOUNT_DIR}" ]; then
    echo -e "ERROR: Specify the directory name of the host to mount."
    usage
    exit 1
fi

# ホスト側のディレクトリが存在しない場合は、ディレクトリを作成する
if [ ! -d ${MOUNT_DIR} ]; then
    mkdir -p ${MOUNT_DIR}
fi

NUM_OF_LOGICAL_PROCESSORS=$(grep processor /proc/cpuinfo | wc -l)
CPU_CORES=0-$((${NUM_OF_LOGICAL_PROCESSORS} - 1))
MEM_LIMIT_GB=$(free -g | sed -n 2p | awk '{ print $7 }')

docker run \
    --interactive \
    --tty \
    --cpuset-cpus        "${CPU_CORES}" \
    --memory             "${MEM_LIMIT_GB}G" \
    --memory-reservation "${MEM_LIMIT_GB}G" \
    --entrypoint         bash \
    --mount type=bind,source="${MOUNT_DIR}",target="${HOME}/Documents" \
    "${IMAGE_DIR}"
    